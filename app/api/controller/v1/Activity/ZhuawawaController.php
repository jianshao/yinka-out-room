<?php

namespace app\api\controller\v1\Activity;

use app\BaseController;
use app\common\RedisCommon;
use app\domain\activity\zhuawawa\ZhuawawaService;
use app\domain\exceptions\FQException;
use app\facade\RequestAes as Request;
use app\utils\ArrayUtil;
use app\utils\Error;

class ZhuawawaController extends BaseController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->headUid = $this->checkMToken();
    }


    /**
     * @return int
     * @throws FQException
     */
    private function checkMToken()
    {
        $token = $this->request->param('mtoken');
        $redis = RedisCommon::getInstance()->getRedis();
        if (!$token) {
            throw new FQException('用户信息错误', 500);
        }
        $userId = $redis->get($token);
        if (!$userId) {
            throw new FQException('用户信息错误', 500);
        }
        return (int)$userId;
    }

    public function zhuawawaIndex()
    {
        $userId = $this->headUid;
        $timestamp = time();
//        用户数据
        $bankAccount = ZhuawawaService::getInstance()->init($userId, $timestamp);
        $dataList = ZhuawawaService::getInstance()->loadIndexList();
        $viewDataList = $this->coveDataListToView($dataList);
        $userViewAssets = $this->userModelToViewAssets($bankAccount);
        $result['list'] = $viewDataList;
        $result['assets'] = $userViewAssets;
        return rjson($result, 200, "success");
    }

    /**
     * @param $data
     * @return array
     */
    private function coveDataListToView($data)
    {
        $result = [];
        foreach ($data as $itemData) {
            $itemView = [];
            $itemView['name'] = $itemData['name'] ?? "";
            $itemView['images'] = $itemData['images'] ?? "";
            $itemView['desc'] = $itemData['desc'] ?? "";
            $itemView['gailv'] = isset($itemData['rate']) ?$itemData['rate']."%": "";
            $result[] = $itemView;
        }

        return $result;
    }


    /**
     * @param $bankAccount
     * @return array
     */
    private function userModelToViewAssets($bankAccount)
    {
        return [
            'coin' => ArrayUtil::safeGet($bankAccount, "coin", 0),
            'bean' => ArrayUtil::safeGet($bankAccount, "bean", 0)
        ];
    }


    /**
     * @info 抓娃娃
     * @return \think\response\Json
     * @throws FQException
     */
    public function zhuawawaFire()
    {
        $userId = $this->headUid;
        $number = Request::param('number', 0, 'intval');
        if (empty($number)) {
            throw new FQException("param error");
        }
        $timestamp = time();
        ZhuawawaService::getInstance()->isAction($userId, $timestamp);
//        抽奖池
        list($giftMap, $_) = ZhuawawaService::getInstance()->fire($userId, $number, $timestamp);
//        加资产
        $result['list'] = ZhuawawaService::getInstance()->adjustAssets($userId, $giftMap);
//        用户数据
        $bankAccount = ZhuawawaService::getInstance()->init($userId, $timestamp);
        $userViewAssets = $this->userModelToViewAssets($bankAccount);
        $result['assets'] = $userViewAssets;

//        转换返回消息格式
        return rjson($result, 200, "success");
    }


    /**
     * @info 增加金币
     * @return \think\response\Json
     * @throws FQException
     */
    public function addCoin()
    {
        $number = Request::param('number', 0, 'intval');
        $userId = Request::param('userId', 0, 'intval');
        if (empty($number)) {
            throw new FQException(Error::getInstance()->GetMsg(Error::INVALID_PARAMS), Error::INVALID_PARAMS);
        }

        if (empty($userId)) {
            $userId = $this->headUid;
        }
        $timestamp = time();
        $coinNumber = ZhuawawaService::getInstance()->addCoin($userId, $number, $timestamp);
        $result['userId'] = $userId;
        $result['number'] = $number;
        $result['coinBalance'] = $coinNumber;
        return rjson($result, 200, "success");
    }

}